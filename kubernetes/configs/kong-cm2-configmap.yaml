apiVersion: v1
data:
  handler.lua: "-- dynamic routing based on JWT Claim\n\nlocal sub = string.sub\nlocal type = type\nlocal pairs = pairs\nlocal lower = string.lower\n\nlocal jwt_decoder = require \"kong.plugins.jwt.jwt_parser\"\n\n\nlocal JWT2Header = {\n  PRIORITY = 900,\n  VERSION = \"1.0\"\n}\n\n\nfunction JWT2Header:rewrite(conf)\n   kong.service.request.set_header(\"X-Kong-JWT-Kong-Proceed\", \"no\")\n  kong.log.debug(kong.request.get_header(\"Authorization\") )\n   local claims = nil\n  local header = nil\n   if kong.request.get_header(\"Authorization\") ~= nil then kong.log.debug(kong.request.get_header(\"Authorization\") )\n    if  string.match(lower(kong.request.get_header(\"Authorization\")), 'bearer') ~= nil then kong.log.debug(\"2\" ..   kong.request.get_path() )\n            local jwt, err = jwt_decoder:new((sub(kong.request.get_header(\"Authorization\"), 8)))\n                if err then\n              return false, { status = 401, message = \"Bad token; \" .. tostring(err) }\n            end\n\n            claims = jwt.claims\n            header = jwt.header\n           kong.service.request.set_header(\"X-Kong-JWT-Kong-Proceed\", \"yes\")\n    end\n  end\n  \n\n\n  if kong.request.get_header(\"X-Kong-JWT-Kong-Proceed\") == \"yes\" then\n    for claim, value in pairs(claims) do\n      if type(claim) == \"string\" and type(value) == \"string\" then\n        kong.service.request.set_header(\"X-Kong-JWT-Claim-\" .. claim, value)\n      end\n    end\n   end\n \nend\n\n\nfunction JWT2Header:access(conf)\n  if kong.request.get_header(\"X-Kong-JWT-Kong-Proceed\") == \"yes\" then    \n      -- ctx oesn't work in kong 1.5, only in 2.x local claims = kong.ctx.plugin.claims\n      local claims = kong.request.get_headers();\n      if not claims then\n        kong.log.debug(\"empty claim\" )\n        return\n      end\n\n    if conf.strip_claims == \"true\" then\n      for claim, value in pairs(claims) do\n          kong.log.debug(\"found header \" .. claim )\n        if type(claim) == \"string\" and string.match(claim, 'x%-kong%-jwt%-claim') ~= nil then  \n          kong.service.request.clear_header(claim)\n          kong.log.debug(\"removed header \" .. claim)\n        end\n      end\n      kong.service.request.clear_header(\"X-Kong-JWT-Kong-Proceed\")\n    end\n\n      --kong.ctx.plugin.claims = nil\n   elseif conf.token_required == \"true\" then \n        kong.service.request.clear_header(\"X-Kong-JWT-Kong-Proceed\")\n        kong.response.exit(404, '{\"error\": \"No valid JWT token found\"}')\n   else kong.service.request.clear_header(\"X-Kong-JWT-Kong-Proceed\")\n   \n  end\nend\n\n\n\nreturn JWT2Header"
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: kong
  name: kong-cm2
